/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    combos {
        compatible = "zmk,combos";

        bootloader_left {
            bindings = <&bootloader>;
            key-positions = <39 4 16 18>;
            layers = <0>;
        };

        bootloader_right {
            bindings = <&bootloader>;
            key-positions = <21 9 23 42>;
            layers = <0>;
        };

        reset_left {
            bindings = <&sys_reset>;
            key-positions = <39 16 18>;
            layers = <0>;
        };

        reset_right {
            bindings = <&sys_reset>;
            key-positions = <21 23 42>;
            layers = <0>;
        };
    };

    behaviors {
        raise_space: raise_space {
            compatible = "zmk,behavior-mod-morph";
            label = "RAISE_SPACE";
            bindings = <&lt 1 SPACE>, <&mo 2>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp BACKSLASH  &kp GRAVE      &kp Q  &kp W  &kp E                    &kp R              &kp T           &kp Y                  &kp U               &kp I          &kp O    &kp P     &kp LEFT_BRACKET     &kp RIGHT_BRACKET
               &kp LEFT_META  &kp A  &kp S  &kp D                    &kp F              &kp G           &kp H                  &kp J               &kp K          &kp L    &kp SEMI  &mt RIGHT_SHIFT SQT
               &kp LCTRL      &kp Z  &kp X  &kp C                    &kp V              &kp B           &kp N                  &kp M               &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_ALT
                                            &mt LEFT_CONTROL ESCAPE  &mt LEFT_META TAB  &raise_space    &mt RIGHT_SHIFT ENTER  &mt RIGHT_META TAB  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp UNDER       &kp AMPERSAND  &kp PERCENT  &kp UP_ARROW    &kp CARET   &kp PIPE     &kp LEFT_BRACKET      &kp N7  &kp N8   &kp N9  &kp MINUS  &kp PG_UP      &mt RGUI F12
        &mt LCTRL PLUS  &kp AT         &kp LEFT     &kp DOWN_ARROW  &kp RIGHT   &kp HASH     &kp LEFT_PARENTHESIS  &kp N4  &kp N5   &kp N6  &kp PLUS   &trans
        &mt LALT EQUAL  &kp STAR       &kp UNDER    &kp EXCL        &kp DOLLAR  &kp SLASH    &kp LEFT_BRACE        &kp N1  &kp N2   &kp N3  &kp EQUAL  &kp PAGE_DOWN
                                                    &trans          &trans      &trans       &mo 2                 &kp N0  &kp DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&bt BT_CLR_ALL  &trans        &kp C_VOLUME_UP    &kp C_BRIGHTNESS_INC  &trans  &trans  &trans    &kp RIGHT_BRACKET      &kp F7  &kp F8  &kp F9  &kp F12  &trans           &soft_off
                &out OUT_TOG  &trans             &trans                &trans  &trans  &trans    &kp RIGHT_PARENTHESIS  &kp F4  &kp F5  &kp F6  &kp F11  &kp PRINTSCREEN
                &trans        &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC  &trans  &trans  &trans    &kp RIGHT_BRACE        &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                                                       &trans  &trans  &trans    &trans                 &trans  &trans
            >;
        };
    };
};
