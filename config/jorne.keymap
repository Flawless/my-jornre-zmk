/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LWIN  &kp GRAVE  &kp Q  &kp W  &kp E      &kp R            &kp T        &kp Y      &kp U           &kp I      &kp O    &kp P     &kp LBKT       &mt RWIN RBKT
          &kp LCTRL  &kp A  &kp S  &kp D      &kp F            &kp G        &kp H      &kp J           &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
          &kp LALT   &kp Z  &kp X  &kp C      &kp V            &kp B        &kp N      &kp M           &kp COMMA  &kp DOT  &kp FSLH  &mt BSLH RALT
                                   &lt 2 TAB  &mt LSHFT SPACE  &lt 1 RET    &lt 1 ESC  &mt RSHFT BSPC  &lt 2 DEL
            >;
        };

        raise_layer {
            bindings = <
&kp LWIN  &trans          &kp ASTERISK  &kp N7        &kp NUMBER_8  &kp NUMBER_9  &lt 0 PLUS    &kp EXCLAMATION  &kp AT          &kp HASH        &kp DOLLAR            &kp PERCENT            &kp UNDERSCORE  &kp RWIN
          &kp LCTRL       &kp SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS     &mkp RCLK        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW          &kp RIGHT_ARROW        &kp RCTRL
          &mt LALT EQUAL  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT       &kp CARET        &kp AMPS        &kp ASTRK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RALT
                                                      &lt 3 TAB     &trans        &trans        &trans           &trans          &lt 3 DEL
            >;
        };

        lower_layer {
            bindings = <
&kp LWIN  &kp F1     &kp F2   &kp F3   &kp F4   &kp F5   &kp CAPS         &msc SCRL_UP    &kp HOME        &kp C_PP         &kp PG_UP      &kp C_VOLUME_UP  &kp UNDER  &kp RWIN
          &kp LCTRL  &kp F6   &kp F7   &kp F8   &kp F9   &kp C_MENU       &mkp LCLK       &mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_UP   &mmv MOVE_RIGHT  &kp RCTRL
          &kp LALT   &kp F10  &kp F11  &kp F12  &kp F13  &kp LC(SPACE)    &msc SCRL_DOWN  &kp END         &kp PRINTSCREEN  &kp PAGE_DOWN  &kp C_VOL_DN     &kp RALT
                                       &trans   &trans   &lt 3 RETURN     &lt 3 ESC       &trans          &trans
            >;
        };

        adjust_layer {
            bindings = <
&none  &bootloader        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader        &none
       &bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &ext_power EP_OFF  &kp KP_NUM    &none         &none         &none         &none           &none         &none         &none         &none         &none         &ext_power EP_OFF
                                                      &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };
};
